{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "84J8REhB1BzI"
      },
      "source": [
        "# 7BUIS010W Data Warehousing and Business Intelligence â€“ Coursework"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "wX8pad8tb_5N"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from sklearn.cluster import KMeans\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.metrics import silhouette_score\n",
        "from datetime import datetime\n",
        "from dateutil.relativedelta import relativedelta\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Set plotting style\n",
        "# plt.style.use('seaborn-whitegrid')\n",
        "sns.set_palette(\"Set2\")\n",
        "plt.rcParams['figure.figsize'] = (12, 8)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Wf5OozO51Gfg"
      },
      "source": [
        "# Task A: Data Understanding"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "PFK_fdXacIbg",
        "outputId": "f1bb5602-7c7a-4b65-8299-daedee0d8a1a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Loading dataset...\n",
            "\n",
            "First few rows of the dataset:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  TransactionID CustomerID CustomerDOB CustGender CustLocation  \\\n",
              "0            T1   C5841053     10/1/94          F   JAMSHEDPUR   \n",
              "1            T2   C2142763      4/4/57          M      JHAJJAR   \n",
              "2            T3   C4417068    26/11/96          F       MUMBAI   \n",
              "3            T4   C5342380     14/9/73          F       MUMBAI   \n",
              "4            T5   C9031234     24/3/88          F  NAVI MUMBAI   \n",
              "\n",
              "   CustAccountBalance TransactionDate  TransactionTime  \\\n",
              "0            17819.05          2/8/16           143207   \n",
              "1             2270.69          2/8/16           141858   \n",
              "2            17874.44          2/8/16           142712   \n",
              "3           866503.21          2/8/16           142714   \n",
              "4             6714.43          2/8/16           181156   \n",
              "\n",
              "   TransactionAmount (INR)  \n",
              "0                     25.0  \n",
              "1                  27999.0  \n",
              "2                    459.0  \n",
              "3                   2060.0  \n",
              "4                   1762.5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c76f5998-829d-483d-ba32-bb2b8a0fd33e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TransactionID</th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>CustomerDOB</th>\n",
              "      <th>CustGender</th>\n",
              "      <th>CustLocation</th>\n",
              "      <th>CustAccountBalance</th>\n",
              "      <th>TransactionDate</th>\n",
              "      <th>TransactionTime</th>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>T1</td>\n",
              "      <td>C5841053</td>\n",
              "      <td>10/1/94</td>\n",
              "      <td>F</td>\n",
              "      <td>JAMSHEDPUR</td>\n",
              "      <td>17819.05</td>\n",
              "      <td>2/8/16</td>\n",
              "      <td>143207</td>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>T2</td>\n",
              "      <td>C2142763</td>\n",
              "      <td>4/4/57</td>\n",
              "      <td>M</td>\n",
              "      <td>JHAJJAR</td>\n",
              "      <td>2270.69</td>\n",
              "      <td>2/8/16</td>\n",
              "      <td>141858</td>\n",
              "      <td>27999.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>T3</td>\n",
              "      <td>C4417068</td>\n",
              "      <td>26/11/96</td>\n",
              "      <td>F</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>17874.44</td>\n",
              "      <td>2/8/16</td>\n",
              "      <td>142712</td>\n",
              "      <td>459.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>T4</td>\n",
              "      <td>C5342380</td>\n",
              "      <td>14/9/73</td>\n",
              "      <td>F</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>866503.21</td>\n",
              "      <td>2/8/16</td>\n",
              "      <td>142714</td>\n",
              "      <td>2060.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>T5</td>\n",
              "      <td>C9031234</td>\n",
              "      <td>24/3/88</td>\n",
              "      <td>F</td>\n",
              "      <td>NAVI MUMBAI</td>\n",
              "      <td>6714.43</td>\n",
              "      <td>2/8/16</td>\n",
              "      <td>181156</td>\n",
              "      <td>1762.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c76f5998-829d-483d-ba32-bb2b8a0fd33e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c76f5998-829d-483d-ba32-bb2b8a0fd33e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c76f5998-829d-483d-ba32-bb2b8a0fd33e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4fcc6f0d-f125-4034-ad87-072722d5ae50\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4fcc6f0d-f125-4034-ad87-072722d5ae50')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4fcc6f0d-f125-4034-ad87-072722d5ae50 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"TransactionID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"T2\",\n          \"T5\",\n          \"T3\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"C2142763\",\n          \"C9031234\",\n          \"C4417068\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerDOB\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"4/4/57\",\n          \"24/3/88\",\n          \"26/11/96\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustGender\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"M\",\n          \"F\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustLocation\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"JHAJJAR\",\n          \"NAVI MUMBAI\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustAccountBalance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 382578.29423273564,\n        \"min\": 2270.69,\n        \"max\": 866503.21,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2270.69,\n          6714.43\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TransactionDate\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2/8/16\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TransactionTime\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17239,\n        \"min\": 141858,\n        \"max\": 181156,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          141858\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TransactionAmount (INR)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12070.379521788038,\n        \"min\": 25.0,\n        \"max\": 27999.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          27999.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Dataset shape: (1048567, 9)\n",
            "\n",
            "Data types:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "TransactionID               object\n",
              "CustomerID                  object\n",
              "CustomerDOB                 object\n",
              "CustGender                  object\n",
              "CustLocation                object\n",
              "CustAccountBalance         float64\n",
              "TransactionDate             object\n",
              "TransactionTime              int64\n",
              "TransactionAmount (INR)    float64\n",
              "dtype: object"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>TransactionID</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerDOB</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustGender</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustLocation</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustAccountBalance</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionDate</th>\n",
              "      <td>object</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionTime</th>\n",
              "      <td>int64</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "      <td>float64</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> object</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Basic statistics:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "       CustAccountBalance  TransactionTime  TransactionAmount (INR)\n",
              "count        1.046198e+06     1.048567e+06             1.048567e+06\n",
              "mean         1.154035e+05     1.570875e+05             1.574335e+03\n",
              "std          8.464854e+05     5.126185e+04             6.574743e+03\n",
              "min          0.000000e+00     0.000000e+00             0.000000e+00\n",
              "25%          4.721760e+03     1.240300e+05             1.610000e+02\n",
              "50%          1.679218e+04     1.642260e+05             4.590300e+02\n",
              "75%          5.765736e+04     2.000100e+05             1.200000e+03\n",
              "max          1.150355e+08     2.359590e+05             1.560035e+06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4a9fdccd-1fdd-425c-953d-e183f05075b9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustAccountBalance</th>\n",
              "      <th>TransactionTime</th>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.046198e+06</td>\n",
              "      <td>1.048567e+06</td>\n",
              "      <td>1.048567e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.154035e+05</td>\n",
              "      <td>1.570875e+05</td>\n",
              "      <td>1.574335e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>8.464854e+05</td>\n",
              "      <td>5.126185e+04</td>\n",
              "      <td>6.574743e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4.721760e+03</td>\n",
              "      <td>1.240300e+05</td>\n",
              "      <td>1.610000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.679218e+04</td>\n",
              "      <td>1.642260e+05</td>\n",
              "      <td>4.590300e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>5.765736e+04</td>\n",
              "      <td>2.000100e+05</td>\n",
              "      <td>1.200000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.150355e+08</td>\n",
              "      <td>2.359590e+05</td>\n",
              "      <td>1.560035e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4a9fdccd-1fdd-425c-953d-e183f05075b9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4a9fdccd-1fdd-425c-953d-e183f05075b9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4a9fdccd-1fdd-425c-953d-e183f05075b9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-46661fd9-2aea-42db-800d-bb8188a46943\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46661fd9-2aea-42db-800d-bb8188a46943')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-46661fd9-2aea-42db-800d-bb8188a46943 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"CustAccountBalance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 40567889.71077814,\n        \"min\": 0.0,\n        \"max\": 115035495.1,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          115403.54005622261,\n          16792.18,\n          1046198.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TransactionTime\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 332569.2506143878,\n        \"min\": 0.0,\n        \"max\": 1048567.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          157087.52939297154,\n          164226.0,\n          1048567.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TransactionAmount (INR)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 618308.1734540403,\n        \"min\": 0.0,\n        \"max\": 1560034.99,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1574.3350034570992,\n          459.03,\n          1048567.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "# 1. Load the data\n",
        "print(\"Loading dataset...\")\n",
        "df = pd.read_csv('/content/drive/MyDrive/Bank_transactions/bank_transactions.csv')\n",
        "\n",
        "# Display the first few rows of the dataset\n",
        "print(\"\\nFirst few rows of the dataset:\")\n",
        "display(df.head())\n",
        "\n",
        "# Check the shape of the dataset\n",
        "print(\"\\nDataset shape:\", df.shape)\n",
        "\n",
        "# Check the data types\n",
        "print(\"\\nData types:\")\n",
        "display(df.dtypes)\n",
        "\n",
        "# Check for basic statistics\n",
        "print(\"\\nBasic statistics:\")\n",
        "display(df.describe())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XUcS6b1J1Lqe"
      },
      "source": [
        "## Task A.1: Identify and remove null values"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 808
        },
        "id": "2GPnJHq9cRBp",
        "outputId": "1df4be40-011f-4da2-b6e0-03150d54e049"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Null values count before cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "TransactionID                 0\n",
              "CustomerID                    0\n",
              "CustomerDOB                3397\n",
              "CustGender                 1100\n",
              "CustLocation                151\n",
              "CustAccountBalance         2369\n",
              "TransactionDate               0\n",
              "TransactionTime               0\n",
              "TransactionAmount (INR)       0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>TransactionID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerDOB</th>\n",
              "      <td>3397</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustGender</th>\n",
              "      <td>1100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustLocation</th>\n",
              "      <td>151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustAccountBalance</th>\n",
              "      <td>2369</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionDate</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionTime</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Null values count after cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "TransactionID              0\n",
              "CustomerID                 0\n",
              "CustomerDOB                0\n",
              "CustGender                 0\n",
              "CustLocation               0\n",
              "CustAccountBalance         0\n",
              "TransactionDate            0\n",
              "TransactionTime            0\n",
              "TransactionAmount (INR)    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>TransactionID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerID</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustomerDOB</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustGender</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustLocation</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustAccountBalance</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionDate</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionTime</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Removed 6953 rows with null values.\n"
          ]
        }
      ],
      "source": [
        "# Check for null values\n",
        "print(\"Null values count before cleaning:\")\n",
        "display(df.isnull().sum())\n",
        "\n",
        "# Remove rows with null values\n",
        "df_clean = df.dropna()\n",
        "print(\"\\nNull values count after cleaning:\")\n",
        "display(df_clean.isnull().sum())\n",
        "\n",
        "print(f\"\\nRemoved {df.shape[0] - df_clean.shape[0]} rows with null values.\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sxU4YAV_1Pex"
      },
      "source": [
        "## Task A.2: Identify and remove invalid transaction amount values\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 782
        },
        "id": "7vTyL9gscTG7",
        "outputId": "a049f73a-2007-4dc6-9e8f-70b2e8dc5172"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Transaction amount statistics before cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "count    1.041614e+06\n",
              "mean     1.566096e+03\n",
              "std      6.561464e+03\n",
              "min      0.000000e+00\n",
              "25%      1.600000e+02\n",
              "50%      4.575000e+02\n",
              "75%      1.200000e+03\n",
              "max      1.560035e+06\n",
              "Name: TransactionAmount (INR), dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.041614e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.566096e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.561464e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000e+00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.600000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.575000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.200000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.560035e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Number of transactions with negative or zero amounts: 820\n",
            "\n",
            "Transaction amount statistics after cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "count    1.040794e+06\n",
              "mean     1.567330e+03\n",
              "std      6.563901e+03\n",
              "min      1.000000e-02\n",
              "25%      1.614700e+02\n",
              "50%      4.589000e+02\n",
              "75%      1.200000e+03\n",
              "max      1.560035e+06\n",
              "Name: TransactionAmount (INR), dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>TransactionAmount (INR)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.040794e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.567330e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>6.563901e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.614700e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>4.589000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.200000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.560035e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Removed 820 rows with invalid transaction amounts.\n"
          ]
        }
      ],
      "source": [
        "# Check for transaction amount statistics\n",
        "print(\"Transaction amount statistics before cleaning:\")\n",
        "display(df_clean['TransactionAmount (INR)'].describe())\n",
        "\n",
        "# Check for negative or zero transaction amounts\n",
        "invalid_amounts = (df_clean['TransactionAmount (INR)'] <= 0).sum()\n",
        "print(f\"\\nNumber of transactions with negative or zero amounts: {invalid_amounts}\")\n",
        "\n",
        "# Remove invalid transaction amounts\n",
        "df_clean = df_clean[df_clean['TransactionAmount (INR)'] > 0]\n",
        "print(\"\\nTransaction amount statistics after cleaning:\")\n",
        "display(df_clean['TransactionAmount (INR)'].describe())\n",
        "\n",
        "print(f\"\\nRemoved {invalid_amounts} rows with invalid transaction amounts.\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ErrdJvAE1SwA"
      },
      "source": [
        "## Task A.3: Identify and remove invalid age values\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 800
        },
        "id": "FtuiDLKUcWhG",
        "outputId": "8b292aa9-ac8a-41bc-9d4e-655ddf2bbb80"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of unparseable dates: 0\n",
            "Age statistics before cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "count    1.040794e+06\n",
              "mean     3.932200e+01\n",
              "std      5.032865e+01\n",
              "min     -4.900000e+01\n",
              "25%      3.200000e+01\n",
              "50%      3.600000e+01\n",
              "75%      4.100000e+01\n",
              "max      2.250000e+02\n",
              "Name: Age, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1.040794e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>3.932200e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>5.032865e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>-4.900000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>3.200000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>3.600000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>4.100000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2.250000e+02</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Number of customers with invalid ages (< 18 or > 100): 161082\n",
            "\n",
            "Age statistics after cleaning:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "count    879712.000000\n",
              "mean         36.944793\n",
              "std           5.162997\n",
              "min          18.000000\n",
              "25%          33.000000\n",
              "50%          36.000000\n",
              "75%          40.000000\n",
              "max          50.000000\n",
              "Name: Age, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Age</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>879712.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>36.944793</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>5.162997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>18.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>33.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>36.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>40.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>50.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Removed 161082 rows with invalid ages.\n"
          ]
        }
      ],
      "source": [
        "# Convert CustomerDOB to datetime\n",
        "df_clean['CustomerDOB'] = pd.to_datetime(df_clean['CustomerDOB'], format='mixed', dayfirst=True, errors='coerce')\n",
        "\n",
        "# Check for any NaT (Not a Time) values that couldn't be parsed\n",
        "print(f\"Number of unparseable dates: {df_clean['CustomerDOB'].isna().sum()}\")\n",
        "\n",
        "# Drop rows with unparseable dates\n",
        "df_clean = df_clean.dropna(subset=['CustomerDOB'])\n",
        "\n",
        "# Calculate age\n",
        "current_date = pd.to_datetime('20250329')  # Current date as per assignment\n",
        "df_clean['Age'] = ((current_date - df_clean['CustomerDOB']).dt.days / 365.25).astype(int)\n",
        "\n",
        "# Display age statistics\n",
        "print(\"Age statistics before cleaning:\")\n",
        "display(df_clean['Age'].describe())\n",
        "\n",
        "# Identify invalid ages (too young or too old for banking)\n",
        "invalid_ages = ((df_clean['Age'] < 18) | (df_clean['Age'] > 100)).sum()\n",
        "print(f\"\\nNumber of customers with invalid ages (< 18 or > 100): {invalid_ages}\")\n",
        "\n",
        "# Remove invalid ages\n",
        "df_clean = df_clean[(df_clean['Age'] >= 18) & (df_clean['Age'] <= 100)]\n",
        "print(\"\\nAge statistics after cleaning:\")\n",
        "display(df_clean['Age'].describe())\n",
        "\n",
        "print(f\"\\nRemoved {invalid_ages} rows with invalid ages.\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "CamlPGlC1X83"
      },
      "source": [
        "## Task A.4: Display the 5 top Locations where the maximum number of transactions occurred\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 881
        },
        "id": "ZVK4kDIv1YFg",
        "outputId": "88cc84ce-2465-44d6-d524-e12b90f93479"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Top 5 locations with the most transactions:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "CustLocation\n",
              "MUMBAI       86277\n",
              "BANGALORE    70701\n",
              "NEW DELHI    66172\n",
              "GURGAON      62746\n",
              "DELHI        60490\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CustLocation</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>MUMBAI</th>\n",
              "      <td>86277</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BANGALORE</th>\n",
              "      <td>70701</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>NEW DELHI</th>\n",
              "      <td>66172</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>GURGAON</th>\n",
              "      <td>62746</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DELHI</th>\n",
              "      <td>60490</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "top_locations = df_clean['CustLocation'].value_counts().head(5)\n",
        "print(\"Top 5 locations with the most transactions:\")\n",
        "display(top_locations)\n",
        "\n",
        "# Visualization of top locations\n",
        "plt.figure(figsize=(10, 6))\n",
        "top_locations.plot(kind='bar', color='skyblue')\n",
        "plt.title('Top 5 Locations with Maximum Transactions')\n",
        "plt.xlabel('Location')\n",
        "plt.ylabel('Number of Transactions')\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "b418YXcN1gC3"
      },
      "source": [
        "## Task A.5-7: Perform RFM Segmentation\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZpK7M3Q6g8RG",
        "outputId": "14a1af96-4eee-40ec-83b8-b84ccd8919c8"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Most recent transaction date: 2016-12-09 00:00:00\n"
          ]
        }
      ],
      "source": [
        "# Convert TransactionDate to datetime\n",
        "df_clean['TransactionDate'] = pd.to_datetime(df_clean['TransactionDate'], format='mixed')\n",
        "\n",
        "# Get the most recent date in the dataset\n",
        "max_date = df_clean['TransactionDate'].max()\n",
        "print(f\"Most recent transaction date: {max_date}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zThpxj611kai"
      },
      "source": [
        "## Task A.5: Write a query to define and calculate the RFM values per Customer\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 243
        },
        "id": "qgCP6m8JcZrF",
        "outputId": "39933f65-97ec-4ca7-d0f5-a058212f4010"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RFM dataframe:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "  CustomerID  Recency  Frequency  Monetary\n",
              "0   C1010011       74          2    5106.0\n",
              "1   C1010012      117          1    1499.0\n",
              "2   C1010014      154          2    1455.0\n",
              "3   C1010018       85          1      30.0\n",
              "4   C1010028      102          1     557.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-763a6c1d-4a8c-4b04-9abc-67f9a00d6c7f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>C1010011</td>\n",
              "      <td>74</td>\n",
              "      <td>2</td>\n",
              "      <td>5106.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>C1010012</td>\n",
              "      <td>117</td>\n",
              "      <td>1</td>\n",
              "      <td>1499.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>C1010014</td>\n",
              "      <td>154</td>\n",
              "      <td>2</td>\n",
              "      <td>1455.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>C1010018</td>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>30.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>C1010028</td>\n",
              "      <td>102</td>\n",
              "      <td>1</td>\n",
              "      <td>557.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-763a6c1d-4a8c-4b04-9abc-67f9a00d6c7f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-763a6c1d-4a8c-4b04-9abc-67f9a00d6c7f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-763a6c1d-4a8c-4b04-9abc-67f9a00d6c7f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6282b5f7-26b3-43d9-8dd4-de079a6e802f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6282b5f7-26b3-43d9-8dd4-de079a6e802f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6282b5f7-26b3-43d9-8dd4-de079a6e802f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"print(f\\\"Total unique customers: {rfm_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"C1010012\",\n          \"C1010028\",\n          \"C1010014\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 74,\n        \"max\": 154,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          117,\n          102,\n          154\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 2,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1986.9756666854275,\n        \"min\": 30.0,\n        \"max\": 5106.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1499.0,\n          557.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total unique customers: 761356\n"
          ]
        }
      ],
      "source": [
        "# Calculate Recency\n",
        "recency_df = df_clean.groupby('CustomerID')['TransactionDate'].max().reset_index()\n",
        "recency_df['Recency'] = (max_date - recency_df['TransactionDate']).dt.days\n",
        "\n",
        "# Calculate Frequency\n",
        "frequency_df = df_clean.groupby('CustomerID').size().reset_index(name='Frequency')\n",
        "\n",
        "# Calculate Monetary\n",
        "monetary_df = df_clean.groupby('CustomerID')['TransactionAmount (INR)'].sum().reset_index(name='Monetary')\n",
        "\n",
        "# Merge all RFM metrics into a single dataframe\n",
        "rfm_df = recency_df.merge(frequency_df, on='CustomerID')\n",
        "rfm_df = rfm_df.merge(monetary_df, on='CustomerID')\n",
        "\n",
        "# Keep only the necessary columns\n",
        "rfm_df = rfm_df[['CustomerID', 'Recency', 'Frequency', 'Monetary']]\n",
        "\n",
        "print(\"RFM dataframe:\")\n",
        "display(rfm_df.head())\n",
        "print(f\"Total unique customers: {rfm_df.shape[0]}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Iw8Q1ORv1nGg"
      },
      "source": [
        "## Task A.6: Check the distribution of Recency, Frequency & Monetary Values\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 871
        },
        "id": "YsZeyWeYccLu",
        "outputId": "1b143cf9-e2ad-48ff-937d-32c4aeeada0d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "RFM summary statistics:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "             Recency      Frequency      Monetary\n",
              "count  761356.000000  761356.000000  7.613560e+05\n",
              "mean      130.297457       1.155454  1.469269e+03\n",
              "std        80.747422       0.409374  5.834883e+03\n",
              "min         0.000000       1.000000  1.000000e-02\n",
              "25%        86.000000       1.000000  1.750000e+02\n",
              "50%       110.000000       1.000000  4.880000e+02\n",
              "75%       154.000000       1.000000  1.245000e+03\n",
              "max       336.000000       6.000000  1.560035e+06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-af69cc5e-78be-4b5a-a93a-b74f26bb235c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>761356.000000</td>\n",
              "      <td>761356.000000</td>\n",
              "      <td>7.613560e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>130.297457</td>\n",
              "      <td>1.155454</td>\n",
              "      <td>1.469269e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>80.747422</td>\n",
              "      <td>0.409374</td>\n",
              "      <td>5.834883e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000e-02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>86.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.750000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>110.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>4.880000e+02</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>154.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.245000e+03</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>336.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>1.560035e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af69cc5e-78be-4b5a-a93a-b74f26bb235c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-af69cc5e-78be-4b5a-a93a-b74f26bb235c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-af69cc5e-78be-4b5a-a93a-b74f26bb235c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-5833ecba-e2ea-4a04-a375-7afa4cfcd4b0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5833ecba-e2ea-4a04-a375-7afa4cfcd4b0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-5833ecba-e2ea-4a04-a375-7afa4cfcd4b0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"print(f\\\"Monetary skewness: {rfm_df['Monetary']\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269134.70479828963,\n        \"min\": 0.0,\n        \"max\": 761356.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          130.29745743121484,\n          110.0,\n          761356.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 269179.41114245885,\n        \"min\": 0.4093736883266166,\n        \"max\": 761356.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.1554542158990013,\n          6.0,\n          0.4093736883266166\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 577487.9430626475,\n        \"min\": 0.01,\n        \"max\": 1560034.99,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1469.269316535234,\n          488.0,\n          761356.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Skewness of RFM values:\n",
            "Recency skewness: 0.9922\n",
            "Frequency skewness: 2.7979\n",
            "Monetary skewness: 71.5773\n"
          ]
        }
      ],
      "source": [
        "# Summary statistics of RFM values\n",
        "print(\"RFM summary statistics:\")\n",
        "display(rfm_df[['Recency', 'Frequency', 'Monetary']].describe())\n",
        "\n",
        "# Visualize the distribution of RFM values\n",
        "plt.figure(figsize=(18, 6))\n",
        "\n",
        "plt.subplot(1, 3, 1)\n",
        "sns.histplot(rfm_df['Recency'], kde=True)\n",
        "plt.title('Distribution of Recency')\n",
        "plt.xlabel('Recency (days)')\n",
        "\n",
        "plt.subplot(1, 3, 2)\n",
        "sns.histplot(rfm_df['Frequency'], kde=True)\n",
        "plt.title('Distribution of Frequency')\n",
        "plt.xlabel('Frequency (count)')\n",
        "\n",
        "plt.subplot(1, 3, 3)\n",
        "sns.histplot(rfm_df['Monetary'], kde=True)\n",
        "plt.title('Distribution of Monetary')\n",
        "plt.xlabel('Monetary (INR)')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Check for skewness\n",
        "print(\"\\nSkewness of RFM values:\")\n",
        "print(f\"Recency skewness: {rfm_df['Recency'].skew():.4f}\")\n",
        "print(f\"Frequency skewness: {rfm_df['Frequency'].skew():.4f}\")\n",
        "print(f\"Monetary skewness: {rfm_df['Monetary'].skew():.4f}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BIDoVLED1p-d"
      },
      "source": [
        "## Task A.7: Discuss the issue of skewness and remove skew from the data\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 551
        },
        "id": "4wVutNetcDVl",
        "outputId": "0bc09f26-b057-4744-aa9c-09b23c7e529a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Skewness after log transformation:\n",
            "Recency log skewness: -2.7180\n",
            "Frequency log skewness: 2.4212\n",
            "Monetary log skewness: -0.1840\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x600 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Apply log transformation to reduce skewness (adding 1 to avoid log(0))\n",
        "rfm_df_transformed = rfm_df.copy()\n",
        "rfm_df_transformed['Recency_log'] = np.log1p(rfm_df_transformed['Recency'])\n",
        "rfm_df_transformed['Frequency_log'] = np.log1p(rfm_df_transformed['Frequency'])\n",
        "rfm_df_transformed['Monetary_log'] = np.log1p(rfm_df_transformed['Monetary'])\n",
        "\n",
        "# Check skewness after transformation\n",
        "print(\"Skewness after log transformation:\")\n",
        "print(f\"Recency log skewness: {rfm_df_transformed['Recency_log'].skew():.4f}\")\n",
        "print(f\"Frequency log skewness: {rfm_df_transformed['Frequency_log'].skew():.4f}\")\n",
        "print(f\"Monetary log skewness: {rfm_df_transformed['Monetary_log'].skew():.4f}\")\n",
        "\n",
        "# Visualize the distribution after transformation\n",
        "plt.figure(figsize=(18, 6))\n",
        "\n",
        "plt.subplot(1, 3, 1)\n",
        "sns.histplot(rfm_df_transformed['Recency_log'], kde=True)\n",
        "plt.title('Distribution of Log-Transformed Recency')\n",
        "plt.xlabel('Log(Recency+1)')\n",
        "\n",
        "plt.subplot(1, 3, 2)\n",
        "sns.histplot(rfm_df_transformed['Frequency_log'], kde=True)\n",
        "plt.title('Distribution of Log-Transformed Frequency')\n",
        "plt.xlabel('Log(Frequency+1)')\n",
        "\n",
        "plt.subplot(1, 3, 3)\n",
        "sns.histplot(rfm_df_transformed['Monetary_log'], kde=True)\n",
        "plt.title('Distribution of Log-Transformed Monetary')\n",
        "plt.xlabel('Log(Monetary+1)')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Create a new dataframe with standardized RFM values\n",
        "scaler = StandardScaler()\n",
        "rfm_scaled = scaler.fit_transform(rfm_df_transformed[['Recency_log', 'Frequency_log', 'Monetary_log']])\n",
        "rfm_df_scaled = pd.DataFrame(rfm_scaled, columns=['Recency_scaled', 'Frequency_scaled', 'Monetary_scaled'])\n",
        "rfm_df_scaled['CustomerID'] = rfm_df['CustomerID'].values"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XxI9s3ky1tG3"
      },
      "source": [
        "# Task B: Customer segmentation with k-means\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "XZot5wJC1647"
      },
      "source": [
        "## Task B.1: Discussion of the appropriateness of K-means\n",
        "\n",
        "Task B.1: Appropriateness of K-means clustering\n",
        "K-means is an appropriate clustering algorithm for RFM analysis because:\n",
        "- It works well with numerical data\n",
        "- It's efficient for large datasets\n",
        "- It creates distinct, non-overlapping clusters\n",
        "- It's interpretable for business stakeholders"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "1aEbrwi02QcK"
      },
      "source": [
        "## Task B.2: Identify the best value of K-number of clusters\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ccrcqMu0coCn",
        "outputId": "f735ba05-5bd4-44ac-f97a-ca486478ab15"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total dataset size: 761356 records\n",
            "Using a sample of 10000 records for optimal K determination\n",
            "Processing k=2...\n",
            "  - Inertia: 19786.00\n",
            "  - Silhouette Score: 0.5444\n",
            "Processing k=3...\n",
            "  - Inertia: 13117.48\n",
            "  - Silhouette Score: 0.5848\n",
            "Processing k=4...\n",
            "  - Inertia: 12315.69\n",
            "  - Silhouette Score: 0.5853\n",
            "Processing k=5...\n",
            "  - Inertia: 7307.01\n",
            "  - Silhouette Score: 0.4396\n",
            "Processing k=6...\n",
            "  - Inertia: 5773.28\n",
            "  - Silhouette Score: 0.3910\n",
            "Processing k=7...\n",
            "  - Inertia: 5045.32\n",
            "  - Silhouette Score: 0.4038\n",
            "Processing k=8...\n",
            "  - Inertia: 4371.21\n",
            "  - Silhouette Score: 0.4040\n",
            "Processing k=9...\n",
            "  - Inertia: 3887.53\n",
            "  - Silhouette Score: 0.4026\n",
            "Processing k=10...\n",
            "  - Inertia: 3511.17\n",
            "  - Silhouette Score: 0.3852\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Optimal number of clusters based on silhouette score: 4\n"
          ]
        }
      ],
      "source": [
        "# Prepare data for clustering\n",
        "X = rfm_df_scaled[['Recency_scaled', 'Frequency_scaled', 'Monetary_scaled']].values\n",
        "\n",
        "# Take a sample for finding the optimal K to improve performance\n",
        "from sklearn.utils import resample\n",
        "\n",
        "# Sample size - adjust according to your total dataset size\n",
        "print(f\"Total dataset size: {X.shape[0]} records\")\n",
        "sample_size = min(10000, X.shape[0])\n",
        "X_sample = resample(X, n_samples=sample_size, random_state=42)\n",
        "print(f\"Using a sample of {sample_size} records for optimal K determination\")\n",
        "\n",
        "# Elbow method to find optimal K\n",
        "inertia = []\n",
        "silhouette_scores = []\n",
        "K_range = range(2, 11)\n",
        "\n",
        "for k in K_range:\n",
        "    print(f\"Processing k={k}...\")\n",
        "    # Use MiniBatchKMeans for faster computation on the sample\n",
        "    from sklearn.cluster import MiniBatchKMeans\n",
        "    kmeans = MiniBatchKMeans(n_clusters=k, random_state=42, batch_size=1024)\n",
        "    kmeans.fit(X_sample)\n",
        "    inertia.append(kmeans.inertia_)\n",
        "    silhouette_scores.append(silhouette_score(X_sample, kmeans.labels_))\n",
        "    print(f\"  - Inertia: {kmeans.inertia_:.2f}\")\n",
        "    print(f\"  - Silhouette Score: {silhouette_scores[-1]:.4f}\")\n",
        "\n",
        "# Plot the Elbow Method results\n",
        "plt.figure(figsize=(16, 6))\n",
        "\n",
        "plt.subplot(1, 2, 1)\n",
        "plt.plot(K_range, inertia, 'bo-')\n",
        "plt.title('Elbow Method (on sample data)')\n",
        "plt.xlabel('Number of clusters (K)')\n",
        "plt.ylabel('Inertia')\n",
        "plt.grid(True)\n",
        "\n",
        "plt.subplot(1, 2, 2)\n",
        "plt.plot(K_range, silhouette_scores, 'ro-')\n",
        "plt.title('Silhouette Score Method (on sample data)')\n",
        "plt.xlabel('Number of clusters (K)')\n",
        "plt.ylabel('Silhouette Score')\n",
        "plt.grid(True)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Find the optimal K\n",
        "optimal_k = K_range[silhouette_scores.index(max(silhouette_scores))]\n",
        "print(f\"Optimal number of clusters based on silhouette score: {optimal_k}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qSIPn_lB2Tyg"
      },
      "source": [
        "## Task B.3: Implementation of K-Means using Python via Google Colab\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 822
        },
        "id": "7RE7GKjkcvY8",
        "outputId": "411f8734-3837-4f70-a0ab-87f38804788a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Applying K-means with k=4 to the full dataset...\n",
            "K-means clustering completed.\n",
            "Merging cluster assignments with original RFM values...\n",
            "Analyzing cluster characteristics...\n",
            "Cluster analysis:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   Cluster     Recency  Frequency     Monetary   Count  Percentage\n",
              "0        0  141.214982   1.000043   149.376757  302109       39.68\n",
              "1        1   98.708618   2.120951  2706.801303   97271       12.78\n",
              "2        2  143.743517   1.000000  2317.964545  326419       42.87\n",
              "3        3    0.515595   1.261749  1507.101519   35557        4.67"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8aad4595-a246-4ac8-b837-0c2d69717de0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>Recency</th>\n",
              "      <th>Frequency</th>\n",
              "      <th>Monetary</th>\n",
              "      <th>Count</th>\n",
              "      <th>Percentage</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>141.214982</td>\n",
              "      <td>1.000043</td>\n",
              "      <td>149.376757</td>\n",
              "      <td>302109</td>\n",
              "      <td>39.68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>98.708618</td>\n",
              "      <td>2.120951</td>\n",
              "      <td>2706.801303</td>\n",
              "      <td>97271</td>\n",
              "      <td>12.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>143.743517</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2317.964545</td>\n",
              "      <td>326419</td>\n",
              "      <td>42.87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>0.515595</td>\n",
              "      <td>1.261749</td>\n",
              "      <td>1507.101519</td>\n",
              "      <td>35557</td>\n",
              "      <td>4.67</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8aad4595-a246-4ac8-b837-0c2d69717de0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8aad4595-a246-4ac8-b837-0c2d69717de0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8aad4595-a246-4ac8-b837-0c2d69717de0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-17e7c11d-836f-4b62-af55-fb3d66353409\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-17e7c11d-836f-4b62-af55-fb3d66353409')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-17e7c11d-836f-4b62-af55-fb3d66353409 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_cdeceed7-12f5-48e1-95f6-7059a43cc32b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('cluster_analysis')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_cdeceed7-12f5-48e1-95f6-7059a43cc32b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('cluster_analysis');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "cluster_analysis",
              "summary": "{\n  \"name\": \"cluster_analysis\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 66.95380974393392,\n        \"min\": 0.515594678966167,\n        \"max\": 143.74351676832538,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          98.70861819041646,\n          0.515594678966167,\n          141.2149820098044\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5313657755478562,\n        \"min\": 1.0,\n        \"max\": 2.1209507458543655,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2.1209507458543655,\n          1.2617487414573783,\n          1.0000430308266222\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1130.4343663066074,\n        \"min\": 149.37675676659748,\n        \"max\": 2706.8013028549103,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          2706.8013028549103,\n          1507.101518969542,\n          149.37675676659748\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 145635,\n        \"min\": 35557,\n        \"max\": 326419,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          97271,\n          35557,\n          302109\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.126566166809276,\n        \"min\": 4.67,\n        \"max\": 42.87,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12.78,\n          4.67,\n          39.68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Preparing visualization (sampling data for better performance)...\n",
            "Using a sample of 5000 records for visualization (from 761356 total)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1600x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "# Apply K-means with the optimal K to the full dataset\n",
        "print(f\"Applying K-means with k={optimal_k} to the full dataset...\")\n",
        "kmeans = KMeans(n_clusters=optimal_k, random_state=42, n_init=10)\n",
        "rfm_df_scaled['Cluster'] = kmeans.fit_predict(X)\n",
        "print(\"K-means clustering completed.\")\n",
        "\n",
        "# Combine cluster assignments with original RFM values\n",
        "print(\"Merging cluster assignments with original RFM values...\")\n",
        "cluster_results = pd.concat([rfm_df, rfm_df_scaled[['CustomerID', 'Cluster']]], axis=1)\n",
        "cluster_results = cluster_results.loc[:, ~cluster_results.columns.duplicated()]\n",
        "\n",
        "# Analyze the clusters\n",
        "print(\"Analyzing cluster characteristics...\")\n",
        "cluster_analysis = cluster_results.groupby('Cluster').agg({\n",
        "    'Recency': 'mean',\n",
        "    'Frequency': 'mean',\n",
        "    'Monetary': 'mean',\n",
        "    'CustomerID': 'count'\n",
        "}).reset_index()\n",
        "\n",
        "cluster_analysis = cluster_analysis.rename(columns={'CustomerID': 'Count'})\n",
        "cluster_analysis['Percentage'] = (cluster_analysis['Count'] / cluster_analysis['Count'].sum() * 100).round(2)\n",
        "\n",
        "print(\"Cluster analysis:\")\n",
        "display(cluster_analysis)\n",
        "\n",
        "# Sample data for visualization\n",
        "print(\"Preparing visualization (sampling data for better performance)...\")\n",
        "visualization_sample = cluster_results\n",
        "if len(cluster_results) > 5000:\n",
        "    visualization_sample = resample(cluster_results, n_samples=5000, random_state=42)\n",
        "    print(f\"Using a sample of 5000 records for visualization (from {len(cluster_results)} total)\")\n",
        "\n",
        "# Visualize the clusters\n",
        "plt.figure(figsize=(16, 6))\n",
        "\n",
        "# Plot the clusters based on RFM values\n",
        "plt.subplot(1, 2, 1)\n",
        "sns.scatterplot(x='Recency', y='Monetary', hue='Cluster', data=visualization_sample, palette='Set1')\n",
        "plt.title('Clusters based on Recency and Monetary')\n",
        "plt.xlabel('Recency (days)')\n",
        "plt.ylabel('Monetary (INR)')\n",
        "\n",
        "plt.subplot(1, 2, 2)\n",
        "sns.scatterplot(x='Frequency', y='Monetary', hue='Cluster', data=visualization_sample, palette='Set1')\n",
        "plt.title('Clusters based on Frequency and Monetary')\n",
        "plt.xlabel('Frequency (count)')\n",
        "plt.ylabel('Monetary (INR)')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "inWw6McL2YlH"
      },
      "source": [
        "### Creating a 3D plot of clusters\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "9caDCiTwc14b",
        "outputId": "6e6171ee-35b4-4c7a-f93a-e80cea1871f5"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Cluster interpretation:\n",
            "\n",
            "Cluster 0:\n",
            "Count: 302109 customers (39.68%)\n",
            "Avg. Recency: 141.21 days\n",
            "Avg. Frequency: 1.00 transactions\n",
            "Avg. Monetary: â‚¹149.38\n",
            "Segment Name: Lost Customers\n",
            "RFM Pattern: Recency High, Frequency Low, Monetary Low\n",
            "\n",
            "Cluster 1:\n",
            "Count: 97271 customers (12.78%)\n",
            "Avg. Recency: 98.71 days\n",
            "Avg. Frequency: 2.12 transactions\n",
            "Avg. Monetary: â‚¹2706.80\n",
            "Segment Name: Champions\n",
            "RFM Pattern: Recency Low, Frequency High, Monetary High\n",
            "\n",
            "Cluster 2:\n",
            "Count: 326419 customers (42.87%)\n",
            "Avg. Recency: 143.74 days\n",
            "Avg. Frequency: 1.00 transactions\n",
            "Avg. Monetary: â‚¹2317.96\n",
            "Segment Name: Hibernating\n",
            "RFM Pattern: Recency High, Frequency Low, Monetary High\n",
            "\n",
            "Cluster 3:\n",
            "Count: 35557 customers (4.67%)\n",
            "Avg. Recency: 0.52 days\n",
            "Avg. Frequency: 1.26 transactions\n",
            "Avg. Monetary: â‚¹1507.10\n",
            "Segment Name: Loyal Customers\n",
            "RFM Pattern: Recency Low, Frequency High, Monetary Low\n"
          ]
        }
      ],
      "source": [
        "from mpl_toolkits.mplot3d import Axes3D\n",
        "\n",
        "fig = plt.figure(figsize=(10, 8))\n",
        "ax = fig.add_subplot(111, projection='3d')\n",
        "\n",
        "ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=kmeans.labels_, cmap='rainbow')\n",
        "ax.set_xlabel('Recency (scaled)')\n",
        "ax.set_ylabel('Frequency (scaled)')\n",
        "ax.set_zlabel('Monetary (scaled)')\n",
        "ax.set_title('3D visualization of RFM clusters')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Interpret the clusters\n",
        "print(\"\\nCluster interpretation:\")\n",
        "for i in range(optimal_k):\n",
        "    print(f\"\\nCluster {i}:\")\n",
        "    print(f\"Count: {cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Count'].values[0]} customers ({cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Percentage'].values[0]}%)\")\n",
        "    print(f\"Avg. Recency: {cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Recency'].values[0]:.2f} days\")\n",
        "    print(f\"Avg. Frequency: {cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Frequency'].values[0]:.2f} transactions\")\n",
        "    print(f\"Avg. Monetary: â‚¹{cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Monetary'].values[0]:.2f}\")\n",
        "\n",
        "    # Assign marketing segment name based on RFM values\n",
        "    r_score = 'Low' if cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Recency'].values[0] < cluster_analysis['Recency'].median() else 'High'\n",
        "    f_score = 'High' if cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Frequency'].values[0] > cluster_analysis['Frequency'].median() else 'Low'\n",
        "    m_score = 'High' if cluster_analysis.loc[cluster_analysis['Cluster'] == i, 'Monetary'].values[0] > cluster_analysis['Monetary'].median() else 'Low'\n",
        "\n",
        "    segment_name = \"\"\n",
        "    if r_score == 'Low' and f_score == 'High' and m_score == 'High':\n",
        "        segment_name = \"Champions\"\n",
        "    elif r_score == 'Low' and f_score == 'High' and m_score == 'Low':\n",
        "        segment_name = \"Loyal Customers\"\n",
        "    elif r_score == 'Low' and f_score == 'Low' and m_score == 'High':\n",
        "        segment_name = \"Potential Loyalists\"\n",
        "    elif r_score == 'High' and f_score == 'High' and m_score == 'High':\n",
        "        segment_name = \"At Risk Customers\"\n",
        "    elif r_score == 'High' and f_score == 'Low' and m_score == 'High':\n",
        "        segment_name = \"Hibernating\"\n",
        "    elif r_score == 'High' and f_score == 'Low' and m_score == 'Low':\n",
        "        segment_name = \"Lost Customers\"\n",
        "    elif r_score == 'High' and f_score == 'High' and m_score == 'Low':\n",
        "        segment_name = \"Need Attention\"\n",
        "    elif r_score == 'Low' and f_score == 'Low' and m_score == 'Low':\n",
        "        segment_name = \"New Customers\"\n",
        "\n",
        "    print(f\"Segment Name: {segment_name}\")\n",
        "    print(f\"RFM Pattern: Recency {r_score}, Frequency {f_score}, Monetary {m_score}\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "rCJTlCXG2tZk"
      },
      "source": [
        "# Task C: Review Results and CRM as a driver for Sustainability"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "SFBG9mzo2h1v"
      },
      "source": [
        "## Task C.1: Discuss business value for marketers of specific clusters by location\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "D-6aAH3EQ76r",
        "outputId": "c940535b-28e2-4b41-9f78-fb6e2a2447b7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cluster analysis by top 5 locations:\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "    Cluster  CustomerID   Location  Total_Customers  Percentage  Avg_Recency  \\\n",
              "0         0       24522     MUMBAI            84959       28.86           30   \n",
              "1         1       19193     MUMBAI            84959       22.59            0   \n",
              "2         2       37013     MUMBAI            84959       43.57           30   \n",
              "3         3        4231     MUMBAI            84959        4.98            0   \n",
              "4         0       23539  BANGALORE            69762       33.74           30   \n",
              "5         1       15903  BANGALORE            69762       22.80            0   \n",
              "6         2       27088  BANGALORE            69762       38.83           30   \n",
              "7         3        3232  BANGALORE            69762        4.63            0   \n",
              "8         0       20372  NEW DELHI            65363       31.17           30   \n",
              "9         1       14960  NEW DELHI            65363       22.89            0   \n",
              "10        2       26667  NEW DELHI            65363       40.80           30   \n",
              "11        3        3364  NEW DELHI            65363        5.15            0   \n",
              "12        0       20764    GURGAON            62034       33.47           30   \n",
              "13        1       13888    GURGAON            62034       22.39            0   \n",
              "14        2       24294    GURGAON            62034       39.16           30   \n",
              "15        3        3088    GURGAON            62034        4.98            0   \n",
              "16        0       20646      DELHI            59782       34.54           30   \n",
              "17        1       13527      DELHI            59782       22.63            0   \n",
              "18        2       22516      DELHI            59782       37.66           30   \n",
              "19        3        3093      DELHI            59782        5.17            0   \n",
              "\n",
              "    Avg_Frequency  Avg_Monetary  \n",
              "0        1.000000     48.335108  \n",
              "1        1.063148    349.071818  \n",
              "2        1.000000    995.511238  \n",
              "3        1.025053     65.595552  \n",
              "4        1.000000     57.021743  \n",
              "5        1.055210    281.120302  \n",
              "6        1.000000    834.529406  \n",
              "7        1.018874     46.020588  \n",
              "8        1.000000     48.620412  \n",
              "9        1.049799    361.945184  \n",
              "10       1.000000   1024.465064  \n",
              "11       1.019025     80.573252  \n",
              "12       1.000000     53.133333  \n",
              "13       1.047811    287.371704  \n",
              "14       1.000000    884.134061  \n",
              "15       1.015544     69.185949  \n",
              "16       1.000000     51.847734  \n",
              "17       1.047904    304.819038  \n",
              "18       1.000000    835.458079  \n",
              "19       1.019399     57.986484  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-99e341c0-9399-48bf-9434-36e48b61a96b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cluster</th>\n",
              "      <th>CustomerID</th>\n",
              "      <th>Location</th>\n",
              "      <th>Total_Customers</th>\n",
              "      <th>Percentage</th>\n",
              "      <th>Avg_Recency</th>\n",
              "      <th>Avg_Frequency</th>\n",
              "      <th>Avg_Monetary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>24522</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>84959</td>\n",
              "      <td>28.86</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>48.335108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>19193</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>84959</td>\n",
              "      <td>22.59</td>\n",
              "      <td>0</td>\n",
              "      <td>1.063148</td>\n",
              "      <td>349.071818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>37013</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>84959</td>\n",
              "      <td>43.57</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>995.511238</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>4231</td>\n",
              "      <td>MUMBAI</td>\n",
              "      <td>84959</td>\n",
              "      <td>4.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.025053</td>\n",
              "      <td>65.595552</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>23539</td>\n",
              "      <td>BANGALORE</td>\n",
              "      <td>69762</td>\n",
              "      <td>33.74</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>57.021743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1</td>\n",
              "      <td>15903</td>\n",
              "      <td>BANGALORE</td>\n",
              "      <td>69762</td>\n",
              "      <td>22.80</td>\n",
              "      <td>0</td>\n",
              "      <td>1.055210</td>\n",
              "      <td>281.120302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>2</td>\n",
              "      <td>27088</td>\n",
              "      <td>BANGALORE</td>\n",
              "      <td>69762</td>\n",
              "      <td>38.83</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>834.529406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3</td>\n",
              "      <td>3232</td>\n",
              "      <td>BANGALORE</td>\n",
              "      <td>69762</td>\n",
              "      <td>4.63</td>\n",
              "      <td>0</td>\n",
              "      <td>1.018874</td>\n",
              "      <td>46.020588</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0</td>\n",
              "      <td>20372</td>\n",
              "      <td>NEW DELHI</td>\n",
              "      <td>65363</td>\n",
              "      <td>31.17</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>48.620412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1</td>\n",
              "      <td>14960</td>\n",
              "      <td>NEW DELHI</td>\n",
              "      <td>65363</td>\n",
              "      <td>22.89</td>\n",
              "      <td>0</td>\n",
              "      <td>1.049799</td>\n",
              "      <td>361.945184</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>2</td>\n",
              "      <td>26667</td>\n",
              "      <td>NEW DELHI</td>\n",
              "      <td>65363</td>\n",
              "      <td>40.80</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1024.465064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>3</td>\n",
              "      <td>3364</td>\n",
              "      <td>NEW DELHI</td>\n",
              "      <td>65363</td>\n",
              "      <td>5.15</td>\n",
              "      <td>0</td>\n",
              "      <td>1.019025</td>\n",
              "      <td>80.573252</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>0</td>\n",
              "      <td>20764</td>\n",
              "      <td>GURGAON</td>\n",
              "      <td>62034</td>\n",
              "      <td>33.47</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>53.133333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1</td>\n",
              "      <td>13888</td>\n",
              "      <td>GURGAON</td>\n",
              "      <td>62034</td>\n",
              "      <td>22.39</td>\n",
              "      <td>0</td>\n",
              "      <td>1.047811</td>\n",
              "      <td>287.371704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>2</td>\n",
              "      <td>24294</td>\n",
              "      <td>GURGAON</td>\n",
              "      <td>62034</td>\n",
              "      <td>39.16</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>884.134061</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>3</td>\n",
              "      <td>3088</td>\n",
              "      <td>GURGAON</td>\n",
              "      <td>62034</td>\n",
              "      <td>4.98</td>\n",
              "      <td>0</td>\n",
              "      <td>1.015544</td>\n",
              "      <td>69.185949</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>0</td>\n",
              "      <td>20646</td>\n",
              "      <td>DELHI</td>\n",
              "      <td>59782</td>\n",
              "      <td>34.54</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>51.847734</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1</td>\n",
              "      <td>13527</td>\n",
              "      <td>DELHI</td>\n",
              "      <td>59782</td>\n",
              "      <td>22.63</td>\n",
              "      <td>0</td>\n",
              "      <td>1.047904</td>\n",
              "      <td>304.819038</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>2</td>\n",
              "      <td>22516</td>\n",
              "      <td>DELHI</td>\n",
              "      <td>59782</td>\n",
              "      <td>37.66</td>\n",
              "      <td>30</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>835.458079</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>3</td>\n",
              "      <td>3093</td>\n",
              "      <td>DELHI</td>\n",
              "      <td>59782</td>\n",
              "      <td>5.17</td>\n",
              "      <td>0</td>\n",
              "      <td>1.019399</td>\n",
              "      <td>57.986484</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-99e341c0-9399-48bf-9434-36e48b61a96b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-99e341c0-9399-48bf-9434-36e48b61a96b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-99e341c0-9399-48bf-9434-36e48b61a96b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-96651bc2-b66b-4241-b805-b6de61935c55\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-96651bc2-b66b-4241-b805-b6de61935c55')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-96651bc2-b66b-4241-b805-b6de61935c55 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_bb2b3a40-1175-467e-94f6-c637f45f07e3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('location_cluster_analysis')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_bb2b3a40-1175-467e-94f6-c637f45f07e3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('location_cluster_analysis');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "location_cluster_analysis",
              "summary": "{\n  \"name\": \"location_cluster_analysis\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"Cluster\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1,\n          3,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustomerID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9664,\n        \"min\": 3088,\n        \"max\": 37013,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          24522,\n          13527,\n          3088\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"BANGALORE\",\n          \"DELHI\",\n          \"NEW DELHI\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total_Customers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9177,\n        \"min\": 59782,\n        \"max\": 84959,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          69762,\n          59782,\n          65363\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Percentage\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13.514050962648197,\n        \"min\": 4.63,\n        \"max\": 43.57,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          28.86,\n          22.8,\n          5.15\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Recency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15,\n        \"min\": 0,\n        \"max\": 30,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          30\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Frequency\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0223800492860869,\n        \"min\": 1.0,\n        \"max\": 1.0631480227166155,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          1.0497994652406417,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Avg_Monetary\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 361.96921972232843,\n        \"min\": 46.020587712508245,\n        \"max\": 1024.4650644860242,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          48.33510846408267,\n          304.8190383392995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x800 with 0 Axes>"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Business value summary for each location:\n",
            "\n",
            "MUMBAI:\n",
            "Total unique customers: 84959\n",
            "Dominant cluster: Cluster 2 with 43.57% of customers\n",
            "Highest value cluster: Cluster 2 with average spend of â‚¹995.51\n",
            "Most frequent customers: Cluster 1 with 1.06 transactions per customer\n",
            "Most recent customers: Cluster 1 with recency of 0.00 days\n",
            "\n",
            "BANGALORE:\n",
            "Total unique customers: 69762\n",
            "Dominant cluster: Cluster 2 with 38.83% of customers\n",
            "Highest value cluster: Cluster 2 with average spend of â‚¹834.53\n",
            "Most frequent customers: Cluster 1 with 1.06 transactions per customer\n",
            "Most recent customers: Cluster 1 with recency of 0.00 days\n",
            "\n",
            "NEW DELHI:\n",
            "Total unique customers: 65363\n",
            "Dominant cluster: Cluster 2 with 40.8% of customers\n",
            "Highest value cluster: Cluster 2 with average spend of â‚¹1024.47\n",
            "Most frequent customers: Cluster 1 with 1.05 transactions per customer\n",
            "Most recent customers: Cluster 1 with recency of 0.00 days\n",
            "\n",
            "GURGAON:\n",
            "Total unique customers: 62034\n",
            "Dominant cluster: Cluster 2 with 39.16% of customers\n",
            "Highest value cluster: Cluster 2 with average spend of â‚¹884.13\n",
            "Most frequent customers: Cluster 1 with 1.05 transactions per customer\n",
            "Most recent customers: Cluster 1 with recency of 0.00 days\n",
            "\n",
            "DELHI:\n",
            "Total unique customers: 59782\n",
            "Dominant cluster: Cluster 2 with 37.66% of customers\n",
            "Highest value cluster: Cluster 2 with average spend of â‚¹835.46\n",
            "Most frequent customers: Cluster 1 with 1.05 transactions per customer\n",
            "Most recent customers: Cluster 1 with recency of 0.00 days\n"
          ]
        }
      ],
      "source": [
        "# Merge cluster information with original dataframe to analyze location patterns\n",
        "df_with_clusters = df_clean.merge(cluster_results[['CustomerID', 'Cluster']], on='CustomerID')\n",
        "\n",
        "# Get top 5 locations\n",
        "top_5_locations = top_locations.index.tolist()\n",
        "\n",
        "# Analyze clusters by location\n",
        "location_cluster_analysis = pd.DataFrame()\n",
        "\n",
        "for location in top_5_locations:\n",
        "    location_data = df_with_clusters[df_with_clusters['CustLocation'] == location]\n",
        "\n",
        "    # Count unique customers by cluster in this location\n",
        "    cluster_counts = location_data.groupby('Cluster')['CustomerID'].nunique().reset_index()\n",
        "    cluster_counts['Location'] = location\n",
        "    cluster_counts['Total_Customers'] = location_data['CustomerID'].nunique()\n",
        "    cluster_counts['Percentage'] = (cluster_counts['CustomerID'] / cluster_counts['Total_Customers'] * 100).round(2)\n",
        "\n",
        "    # Calculate average RFM values by cluster in this location\n",
        "    rfm_by_cluster = location_data.groupby('Cluster').agg({\n",
        "        'TransactionDate': lambda x: (max_date - x.max()).days,  # Recency\n",
        "        'CustomerID': lambda x: x.count() / x.nunique(),  # Frequency (transactions per customer)\n",
        "        'TransactionAmount (INR)': lambda x: x.sum() / location_data['CustomerID'].nunique()  # Monetary (avg. amount per customer)\n",
        "    }).reset_index()\n",
        "\n",
        "    rfm_by_cluster.columns = ['Cluster', 'Avg_Recency', 'Avg_Frequency', 'Avg_Monetary']\n",
        "\n",
        "    # Merge counts and RFM values\n",
        "    location_summary = pd.merge(cluster_counts, rfm_by_cluster, on='Cluster')\n",
        "\n",
        "    # Append to main dataframe\n",
        "    location_cluster_analysis = pd.concat([location_cluster_analysis, location_summary], ignore_index=True)\n",
        "\n",
        "print(\"Cluster analysis by top 5 locations:\")\n",
        "display(location_cluster_analysis)\n",
        "\n",
        "# Visualize the distribution of clusters across top locations\n",
        "plt.figure(figsize=(14, 8))\n",
        "clusters_by_location = pd.crosstab(df_with_clusters[df_with_clusters['CustLocation'].isin(top_5_locations)]['CustLocation'],\n",
        "                                  df_with_clusters[df_with_clusters['CustLocation'].isin(top_5_locations)]['Cluster'])\n",
        "\n",
        "# Convert to percentages\n",
        "clusters_by_location_pct = clusters_by_location.div(clusters_by_location.sum(axis=1), axis=0) * 100\n",
        "\n",
        "# Plot stacked bars\n",
        "clusters_by_location_pct.plot(kind='bar', stacked=True, colormap='Set3')\n",
        "plt.title('Distribution of Customer Clusters by Top Locations')\n",
        "plt.xlabel('Location')\n",
        "plt.ylabel('Percentage of Customers')\n",
        "plt.legend(title='Cluster')\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Business value summary\n",
        "print(\"\\nBusiness value summary for each location:\")\n",
        "\n",
        "for location in top_5_locations:\n",
        "    location_data = location_cluster_analysis[location_cluster_analysis['Location'] == location]\n",
        "\n",
        "    print(f\"\\n{location}:\")\n",
        "    print(f\"Total unique customers: {location_data['Total_Customers'].iloc[0]}\")\n",
        "\n",
        "    # Find the most common cluster\n",
        "    most_common = location_data.loc[location_data['CustomerID'].idxmax()]\n",
        "    print(f\"Dominant cluster: Cluster {most_common['Cluster']} with {most_common['Percentage']}% of customers\")\n",
        "\n",
        "    # Find high value customers\n",
        "    high_value = location_data.sort_values('Avg_Monetary', ascending=False).iloc[0]\n",
        "    print(f\"Highest value cluster: Cluster {high_value['Cluster']} with average spend of â‚¹{high_value['Avg_Monetary']:.2f}\")\n",
        "\n",
        "    # Find most frequent customers\n",
        "    most_frequent = location_data.sort_values('Avg_Frequency', ascending=False).iloc[0]\n",
        "    print(f\"Most frequent customers: Cluster {most_frequent['Cluster']} with {most_frequent['Avg_Frequency']:.2f} transactions per customer\")\n",
        "\n",
        "    # Find most recent customers\n",
        "    most_recent = location_data.sort_values('Avg_Recency').iloc[0]\n",
        "    print(f\"Most recent customers: Cluster {most_recent['Cluster']} with recency of {most_recent['Avg_Recency']:.2f} days\")"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
